{"version":3,"sources":["state/action-creators/index.js","web/functions/index.js","web/game/Alphabet.js","web/game/Hangman.js","web/game/Quote.js","web/game/Game.js","web/Main.js","App.js","state/reducers/userReducer.js","state/reducers/gameReducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["changeQuote","newQuote","dispatch","type","changeQuoteId","newQuoteId","changeQuoteLength","newQuoteLength","changeUniqueCharacters","newUniqueCharacters","changeUserName","newUserName","changeErrors","newErrors","changeStartTime","newStartTime","changeHiddenQuote","newHiddenQuote","changeDisableds","newDisableds","isLetter","str","length","match","findUnique","uniq","i","includes","Alphabet","user","useSelector","state","game","useDispatch","alphabet","bindActionCreators","actionCreators","className","map","char","onClick","e","target","innerText","lowChar","toLowerCase","quoteWords","quote","split","word","hiddenQuote","idx","quoteWord","newWord","a","errors","stringHiddenQuote","join","disableds","handleAlphabetClick","disabled","Hangman","Quote","Game","handleClick","axios","get","then","res","data","unique","content","uniqueLength","letter","_id","Date","getTime","catch","err","console","log","Main","handleSubmit","minLength","onChange","value","App","initialState","quoteId","quoteLength","uniqueCharacters","userName","startTime","reducer","action","endTime","newEndTime","reducers","combineReducers","userReducer","gameReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43f11d47.chunk.js","sourcesContent":["export const changeQuote = (newQuote) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeQuote\",\r\n      newQuote: newQuote,\r\n    });\r\n  };\r\n};\r\nexport const changeQuoteId = (newQuoteId) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeQuoteId\",\r\n      newQuoteId: newQuoteId,\r\n    });\r\n  };\r\n};\r\nexport const changeQuoteLength = (newQuoteLength) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeQuoteLength\",\r\n      newQuoteLength: newQuoteLength,\r\n    });\r\n  };\r\n};\r\nexport const changeUniqueCharacters = (newUniqueCharacters) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeUniqueCharacters\",\r\n      newUniqueCharacters: newUniqueCharacters,\r\n    });\r\n  };\r\n};\r\nexport const changeUserName = (newUserName) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeUserName\",\r\n      newUserName: newUserName,\r\n    });\r\n  };\r\n};\r\nexport const changeErrors = (newErrors) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeErrors\",\r\n      newErrors: newErrors,\r\n    });\r\n  };\r\n};\r\nexport const changeStartTime = (newStartTime) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeStartTime\",\r\n      newStartTime: newStartTime,\r\n    });\r\n  };\r\n};\r\nexport const changeHiddenQuote = (newHiddenQuote) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeHiddenQuote\",\r\n      newHiddenQuote: newHiddenQuote,\r\n    });\r\n  };\r\n};\r\nexport const changeDisableds = (newDisableds) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"changeDisableds\",\r\n      newDisableds: newDisableds,\r\n    });\r\n  };\r\n};\r\n","export const isLetter = (str) => {\r\n  return str.length === 1 && str.match(/[a-z]/i);\r\n};\r\n\r\nexport const findUnique = (str) => {\r\n  let uniq = \"\";\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (uniq.includes(str[i]) === false) {\r\n      uniq += str[i];\r\n    }\r\n  }\r\n  return uniq;\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../state/index\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst Alphabet = () => {\r\n  const user = useSelector((state) => state.user);\r\n  const game = useSelector((state) => state.game);\r\n  const dispatch = useDispatch();\r\n\r\n  const alphabet = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ];\r\n\r\n  const { changeErrors, changeHiddenQuote, changeDisableds } =\r\n    bindActionCreators(actionCreators, dispatch);\r\n\r\n  const handleAlphabetClick = (e, i) => {\r\n    const char = e.target.innerText;\r\n    const lowChar = char.toLowerCase();\r\n    const quoteWords = user.quote.split(\" \").map((word) => {\r\n      const newWord = word.split(\"\");\r\n      return newWord;\r\n    });\r\n    let newHiddenQuote = [];\r\n\r\n    if ([...user.quote].includes(char) || [...user.quote].includes(lowChar)) {\r\n      newHiddenQuote = game.hiddenQuote.map((word, idx) => {\r\n        const quoteWord = quoteWords[idx];\r\n        const newWord = word.map((a, i) => {\r\n          if (quoteWord[i] === char || quoteWord[i] === lowChar) {\r\n            return (a = quoteWord[i]);\r\n          } else {\r\n            return a;\r\n          }\r\n        });\r\n        return newWord;\r\n      });\r\n      changeHiddenQuote(newHiddenQuote);\r\n    } else {\r\n      changeErrors(user.errors + 1);\r\n    }\r\n\r\n    const stringHiddenQuote = newHiddenQuote\r\n      .map((word) => {\r\n        return word.join(\"\");\r\n      })\r\n      .join(\" \");\r\n\r\n    if (user.quote === stringHiddenQuote) {\r\n      changeDisableds(alphabet.map((a, i) => i));\r\n      return;\r\n    }\r\n    changeDisableds([...game.disableds, i]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"alphabet\">\r\n      {alphabet.map((char, i) => (\r\n        <button\r\n          key={i}\r\n          className=\"alphabet-char\"\r\n          onClick={(e) => handleAlphabetClick(e, i)}\r\n          disabled={user.disableds.includes(i)}\r\n        >\r\n          {char}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Hangman = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <div className=\"hangman\">\r\n      <div className=\"pole\"></div>\r\n      <div className=\"man\">\r\n        <div className=\"rope\"></div>\r\n        <div className={user.errors > 0 ? \"head\" : \"head opacity\"}>\r\n          {user.errors}\r\n        </div>\r\n        <div className=\"body\">\r\n          <div\r\n            className={user.errors > 2 ? \"left-hand\" : \"left-hand opacity\"}\r\n          ></div>\r\n          <div className={user.errors > 1 ? \"center\" : \"center opacity\"}></div>\r\n          <div\r\n            className={user.errors > 3 ? \"right-hand\" : \"right-hand opacity\"}\r\n          ></div>\r\n        </div>\r\n        <div className=\"legs\">\r\n          <div\r\n            className={user.errors > 4 ? \"left-leg\" : \"left-leg opacity\"}\r\n          ></div>\r\n          <div\r\n            className={user.errors > 5 ? \"right-leg\" : \"right-leg opacity\"}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hangman;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Quote = () => {\r\n  const game = useSelector((state) => state.game);\r\n\r\n  return (\r\n    <div className=\"quote\">\r\n      {game.hiddenQuote.map((word, idx) => {\r\n        const newWord = word.map((char, i) => {\r\n          return (\r\n            <div key={i} className=\"char\">\r\n              {char}\r\n            </div>\r\n          );\r\n        });\r\n        return (\r\n          <div key={idx + 100} className=\"word\">\r\n            {newWord}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\nimport \"../style.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../state/index\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport axios from \"axios\";\r\nimport { findUnique, isLetter } from \"../functions\";\r\nimport Alphabet from \"./Alphabet\";\r\nimport Hangman from \"./Hangman\";\r\nimport Quote from \"./Quote\";\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    changeQuote,\r\n    changeUniqueCharacters,\r\n    changeQuoteId,\r\n    changeQuoteLength,\r\n    changeStartTime,\r\n    changeErrors,\r\n    changeHiddenQuote,\r\n    changeDisableds,\r\n  } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const handleClick = () => {\r\n    axios\r\n      .get(\"https://api.quotable.io/random\")\r\n      .then((res) => {\r\n        const data = res.data;\r\n        const unique = findUnique(data.content);\r\n        let uniqueLength = 0;\r\n\r\n        if (data.length > 50) {\r\n          handleClick();\r\n          return;\r\n        } else {\r\n          for (let i = 0; i < unique.length; i++) {\r\n            if (isLetter(unique[i])) {\r\n              uniqueLength++;\r\n            }\r\n          }\r\n\r\n          const newHiddenQuote = data.content.split(\" \").map((word, i) => {\r\n            let newWord = word.split(\"\").map((letter, i) => {\r\n              if (isLetter(letter)) {\r\n                return \"_\";\r\n              } else {\r\n                return letter;\r\n              }\r\n            });\r\n            return newWord;\r\n          });\r\n\r\n          changeQuote(data.content);\r\n          changeQuoteId(data._id);\r\n          changeQuoteLength(data.length);\r\n          changeHiddenQuote(newHiddenQuote);\r\n          changeStartTime(new Date().getTime());\r\n          changeErrors(0);\r\n          changeUniqueCharacters(uniqueLength);\r\n          changeDisableds([]);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <button className=\"restart\" onClick={handleClick}>\r\n        Restart\r\n      </button>\r\n      <Hangman />\r\n      <Quote />\r\n      <Alphabet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../state/index\";\r\nimport axios from \"axios\";\r\nimport \"./style.scss\";\r\nimport Game from \"./game/Game\";\r\nimport { findUnique, isLetter } from \"./functions\";\r\n\r\nconst Main = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    changeUserName,\r\n    changeQuote,\r\n    changeQuoteId,\r\n    changeQuoteLength,\r\n    changeStartTime,\r\n    changeHiddenQuote,\r\n    changeUniqueCharacters,\r\n  } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const handleSubmit = () => {\r\n    axios\r\n      .get(\"https://api.quotable.io/random\")\r\n      .then((res) => {\r\n        const data = res.data;\r\n\r\n        if (data.content.length > 50) {\r\n          handleSubmit();\r\n          return;\r\n        } else {\r\n          const unique = findUnique(data.content);\r\n          let uniqueLength = 0;\r\n          for (let i = 0; i < unique.length; i++) {\r\n            if (isLetter(unique[i])) {\r\n              uniqueLength++;\r\n            }\r\n          }\r\n\r\n          const newHiddenQuote = data.content.split(\" \").map((word, i) => {\r\n            let newWord = word.split(\"\").map((letter, i) => {\r\n              if (isLetter(letter)) {\r\n                return \"_\";\r\n              } else {\r\n                return letter;\r\n              }\r\n            });\r\n            return newWord;\r\n          });\r\n\r\n          changeQuote(data.content);\r\n          changeQuoteId(data._id);\r\n          changeQuoteLength(data.length);\r\n          changeHiddenQuote(newHiddenQuote);\r\n          changeStartTime(new Date().getTime());\r\n          changeUniqueCharacters(uniqueLength);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        className={user.quote === \"\" ? \"start-screen\" : \" start-screen move-up\"}\r\n      >\r\n        <h1>Welcome to</h1>\r\n        <span className=\"logo\">HANGMAN GAME</span>\r\n        <h1 className=\"bottom-header\">enter your name to continue:</h1>\r\n        <input\r\n          type=\"text\"\r\n          minLength=\"2\"\r\n          onChange={(e) => changeUserName(e.target.value)}\r\n        />\r\n        <button onClick={() => handleSubmit()}>Play</button>\r\n      </div>\r\n      <Game />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"./web/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  quote: \"\",\r\n  quoteId: \"\",\r\n  quoteLength: 0,\r\n  uniqueCharacters: 0,\r\n  userName: \"\",\r\n  errors: 0,\r\n  startTime: 0,\r\n  hiddenQuote: [],\r\n  disableds: [],\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"changeQuote\":\r\n      return { ...state, quote: action.newQuote };\r\n    case \"changeQuoteId\":\r\n      return { ...state, quoteId: action.newQuoteId };\r\n    case \"changeQuoteLength\":\r\n      return { ...state, quoteLength: action.newQuoteLength };\r\n    case \"changeUniqueCharacters\":\r\n      return { ...state, uniqueCharacters: action.newUniqueCharacters };\r\n    case \"changeUserName\":\r\n      return { ...state, userName: action.newUserName };\r\n    case \"changeErrors\":\r\n      return { ...state, errors: action.newErrors };\r\n    case \"changeStartTime\":\r\n      return { ...state, startTime: action.newStartTime };\r\n    case \"changeEndTime\":\r\n      return { ...state, endTime: action.newEndTime };\r\n    case \"changeHiddenQuote\":\r\n      return { ...state, hiddenQuote: action.newHiddenQuote };\r\n    case \"changeDisableds\":\r\n      return { ...state, disableds: action.newDisableds };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  hiddenQuote: [],\r\n  disableds: [],\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"changeHiddenQuote\":\r\n      return { ...state, hiddenQuote: action.newHiddenQuote };\r\n    case \"changeDisableds\":\r\n      return { ...state, disableds: action.newDisableds };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\nimport gameReducer from \"./gameReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  game: gameReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}